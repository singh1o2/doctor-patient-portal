{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arsh1\\\\Desktop\\\\Node\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const [name, setName] = useState('');\n  const [channel, setChannel] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n  const sendMessage = async () => {\n    if (message != '') {\n      await socket.emit('send_message', {\n        channel,\n        name,\n        message\n      });\n      setMessageList(messageList => [...messageList, {\n        channel,\n        name,\n        message\n      }]);\n    }\n  };\n  useEffect(() => {\n    console.log(search);\n    const {\n      name,\n      channel\n    } = queryString.parse(search);\n    setName(name);\n    setChannel(channel);\n    socket.emit('join', {\n      name,\n      channel\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [search]); //render only when value in array changes\n\n  useEffect(() => {\n    socket.on('receive_message', data => {\n      console.log(data);\n      setMessageList(messageList => [...messageList, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: messageList.map(message => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [message.message, \" - \", message.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setMessage(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: sendMessage,\n        children: \" Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"ZAq2db/XJxDQWKwHOCMOX1VaHnk=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","queryString","useLocation","Chat","search","name","setName","channel","setChannel","message","setMessage","messageList","setMessageList","sendMessage","socket","emit","console","log","parse","off","on","data","map","event","target","value"],"sources":["C:/Users/arsh1/Desktop/Node/chat-app/client/src/components/Chat.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport queryString from 'query-string';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nexport default function Chat()\r\n{\r\n    const {search} = useLocation();\r\n    const [name,setName]= useState('');\r\n    const [channel,setChannel]= useState('');\r\n    const [message,setMessage] = useState('');\r\n    const [messageList,setMessageList] = useState([]);\r\n\r\n    const sendMessage  = async () => {\r\n        if(message!=''){\r\n          await socket.emit('send_message',{channel, name,message});\r\n          setMessageList((messageList)=>[...messageList,{channel, name,message}]);\r\n        }\r\n    };\r\n    useEffect(()=>{\r\n        console.log(search);\r\n        const {name,channel} = queryString.parse(search);  \r\n        setName(name);\r\n        setChannel(channel);\r\n        socket.emit('join',{name,channel});\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n    },[search]);//render only when value in array changes\r\n\r\n    useEffect(()=>{\r\n        socket.on('receive_message',(data)=>{\r\n            console.log(data);\r\n            setMessageList((messageList)=>[...messageList,data]);\r\n        });\r\n    },[socket]);\r\n    return(\r\n        <div> \r\n            <div className = \"chat-header\">\r\n                <a>Get Started</a>\r\n            </div>\r\n            <div className = \"chat-body\">\r\n                {messageList.map((message)=>{\r\n                    return <h1>{message.message} - {message.name}</h1>\r\n                })}\r\n            </div>\r\n            <div className = \"chat-footer\">\r\n                <input type = \"text\" onChange  = {(event)=>{setMessage(event.target.value);}}/>\r\n                <button type = \"submit\" onClick = {sendMessage}> Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,WAAW,MAAM,cAAc;AACtC,SAAQC,WAAW,QAAO,kBAAkB;AAAC;AAE7C,eAAe,SAASC,IAAI,GAC5B;EAAA;EACI,MAAM;IAACC;EAAM,CAAC,GAAGF,WAAW,EAAE;EAC9B,MAAM,CAACG,IAAI,EAACC,OAAO,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,OAAO,EAACC,UAAU,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACa,WAAW,EAACC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMe,WAAW,GAAI,YAAY;IAC7B,IAAGJ,OAAO,IAAE,EAAE,EAAC;MACb,MAAMK,MAAM,CAACC,IAAI,CAAC,cAAc,EAAC;QAACR,OAAO;QAAEF,IAAI;QAACI;MAAO,CAAC,CAAC;MACzDG,cAAc,CAAED,WAAW,IAAG,CAAC,GAAGA,WAAW,EAAC;QAACJ,OAAO;QAAEF,IAAI;QAACI;MAAO,CAAC,CAAC,CAAC;IACzE;EACJ,CAAC;EACDV,SAAS,CAAC,MAAI;IACViB,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;IACnB,MAAM;MAACC,IAAI;MAACE;IAAO,CAAC,GAAGN,WAAW,CAACiB,KAAK,CAACd,MAAM,CAAC;IAChDE,OAAO,CAACD,IAAI,CAAC;IACbG,UAAU,CAACD,OAAO,CAAC;IACnBO,MAAM,CAACC,IAAI,CAAC,MAAM,EAAC;MAACV,IAAI;MAACE;IAAO,CAAC,CAAC;IAClC,OAAO,MAAM;MACTO,MAAM,CAACC,IAAI,CAAC,YAAY,CAAC;MACzBD,MAAM,CAACK,GAAG,EAAE;IAChB,CAAC;EACL,CAAC,EAAC,CAACf,MAAM,CAAC,CAAC,CAAC;;EAEZL,SAAS,CAAC,MAAI;IACVe,MAAM,CAACM,EAAE,CAAC,iBAAiB,EAAEC,IAAI,IAAG;MAChCL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACjBT,cAAc,CAAED,WAAW,IAAG,CAAC,GAAGA,WAAW,EAACU,IAAI,CAAC,CAAC;IACxD,CAAC,CAAC;EACN,CAAC,EAAC,CAACP,MAAM,CAAC,CAAC;EACX,oBACI;IAAA,wBACI;MAAK,SAAS,EAAG,aAAa;MAAA,uBAC1B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAkB;MAAA;MAAA;MAAA;IAAA,QAChB,eACN;MAAK,SAAS,EAAG,WAAW;MAAA,UACvBH,WAAW,CAACW,GAAG,CAAEb,OAAO,IAAG;QACxB,oBAAO;UAAA,WAAKA,OAAO,CAACA,OAAO,SAAKA,OAAO,CAACJ,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM;MACtD,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAG,aAAa;MAAA,wBAC1B;QAAO,IAAI,EAAG,MAAM;QAAC,QAAQ,EAAMkB,KAAK,IAAG;UAACb,UAAU,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/E;QAAQ,IAAI,EAAG,QAAQ;QAAC,OAAO,EAAIZ,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAhDuBV,IAAI;EAAA,QAEPD,WAAW;AAAA;AAAA,KAFRC,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}