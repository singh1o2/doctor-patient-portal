{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arsh1\\\\Desktop\\\\Node\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function Chat() {\n  _s();\n  console.log(useLocation());\n  const [name, setName] = useState('');\n  const [channel, setChannel] = useState('');\n  useEffect(() => {\n    const {\n      name,\n      channel\n    } = queryString.parse(props.location.search);\n    socket = io.connect('http://localhost:3001'); //connect to server \n    setName(name);\n    setChannel(channel);\n    socket.emit('join', {\n      name,\n      channel\n    });\n  }, []); //render only when value in array changes\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hey\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"+VelidhBQQOLtMGo1ATZqw5Tut4=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","queryString","useLocation","socket","Chat","console","log","name","setName","channel","setChannel","parse","props","location","search","connect","emit"],"sources":["C:/Users/arsh1/Desktop/Node/chat-app/client/src/components/Chat.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport queryString from 'query-string';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nlet socket;\r\nexport default function Chat()\r\n{\r\n    console.log(useLocation());\r\n    const [name,setName]= useState('');\r\n    const [channel,setChannel]= useState('');\r\n    useEffect(()=>{\r\n        const {name,channel} = queryString.parse(props.location.search);\r\n        socket = io.connect('http://localhost:3001');//connect to server \r\n        setName(name);\r\n        setChannel(channel);\r\n        socket.emit('join',{name,channel});\r\n    },[])//render only when value in array changes\r\n    return(\r\n        <h1>Hey</h1>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,WAAW,MAAM,cAAc;AACtC,SAAQC,WAAW,QAAO,kBAAkB;AAAC;AAE7C,IAAIC,MAAM;AACV,eAAe,SAASC,IAAI,GAC5B;EAAA;EACIC,OAAO,CAACC,GAAG,CAACJ,WAAW,EAAE,CAAC;EAC1B,MAAM,CAACK,IAAI,EAACC,OAAO,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACW,OAAO,EAACC,UAAU,CAAC,GAAEZ,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAI;IACV,MAAM;MAACQ,IAAI;MAACE;IAAO,CAAC,GAAGR,WAAW,CAACU,KAAK,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC/DX,MAAM,GAAGH,EAAE,CAACe,OAAO,CAAC,uBAAuB,CAAC,CAAC;IAC7CP,OAAO,CAACD,IAAI,CAAC;IACbG,UAAU,CAACD,OAAO,CAAC;IACnBN,MAAM,CAACa,IAAI,CAAC,MAAM,EAAC;MAACT,IAAI;MAACE;IAAO,CAAC,CAAC;EACtC,CAAC,EAAC,EAAE,CAAC;EACL,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAY;AAEpB;AAAC,GAfuBL,IAAI;EAAA,QAEZF,WAAW;AAAA;AAAA,KAFHE,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}